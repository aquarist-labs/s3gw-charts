{{- if .Values.useCertManager }}
---
# Private s3gw-ca issuer
# This issuer is needed in all cases to issue a certificate for the
# cluster-internal connection
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: {{ .Release.Name }}-{{ .Release.Namespace }}-private-issuer
  labels:
{{ include "s3gw.labels" . | indent 4}}
spec:
  ca:
    secretName: {{ .Release.Name }}-{{ .Release.Namespace }}-ca-root
---
# This issuer is either using self-signed certificates or requesting
# certificates from Letsencrypt. This is used to issue certificates for the
# ingress, both for the S3 endpoint at the ingres as well as the UI.
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: {{ include "s3gw.tlsIssuerName" . | quote }}
  labels:
{{ include "s3gw.labels" . | indent 4}}
spec:
{{- if eq .Values.tlsIssuer "s3gw-issuer" }}
  # Self-signed issuer
  selfSigned: {}
{{- else if eq .Values.tlsIssuer "s3gw-letsencrypt-issuer" }}
  # Let's encrypt production issuer
  acme:
    email: {{ .Values.email }}
    preferredChain: ""
    privateKeySecretRef:
      name: {{ .Release.Name }}-{{ .Release.Namespace }}-letsencrypt
    server: https://acme-v02.api.letsencrypt.org/directory
    solvers:
    - http01:
        ingress:
          ingressTemplate:
            metadata:
              annotations:
                traefik.ingress.kubernetes.io/router.entrypoints: websecure
                traefik.ingress.kubernetes.io/router.tls: "true"
{{- end }}
{{- end }}
