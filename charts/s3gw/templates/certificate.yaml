{{- if .Values.useCertManager }}
---
# s3gw-ca root certificate
# This is the root certificate that will be used by the private ca issuer to
# issue a certificate for the cluster-internal connection
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Release.Name }}-{{ .Release.Namespace }}-ca-cert
  namespace: {{ .Values.certManagerNamespace }}
  labels:
{{ include "s3gw.labels" . | indent 4}}
spec:
  commonName: {{ .Release.Name }}-{{ .Release.Namespace }}-ca
  isCA: true
  issuerRef:
    kind: ClusterIssuer
    name: {{ .Release.Name }}-{{ .Release.Namespace }}-private-issuer
  privateKey:
    algorithm: ECDSA
    size: 256
  secretName: {{ .Release.Name }}-{{ .Release.Namespace }}-ca-root
---
# s3gw internal service certificate (private domain)
# This is the certificate that is requested for the cluster internal connection
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Release.Name }}-{{ .Release.Namespace }}-cluster-ip-cert
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "s3gw.labels" . | indent 4}}
spec:
  dnsNames:
    - '{{ include "s3gw.serviceName" . }}.{{ .Release.Namespace }}.{{ .Values.privateDomain }}'
    - '*.{{ include "s3gw.serviceName" . }}.{{ .Release.Namespace }}.{{ .Values.privateDomain }}'
  issuerRef:
    kind: ClusterIssuer
    name: {{ .Release.Name }}-{{ .Release.Namespace }}-private-issuer
  secretName: {{ .Release.Name }}-{{ .Release.Namespace }}-cluster-ip-tls
{{- end }}
